{"version":3,"sources":["./src/app/ciudades/ciudades.component.ts","./src/app/ciudades/ciudades.component.html","./src/app/registro/registro.component.ts","./src/app/registro/registro.component.html","./src/app/_services/shape.service.ts","./src/app/graphql.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/people-list/people-list.component.ts","./src/app/people-list/people-list.component.html","./src/environments/environment.ts","./src/app/model/person/person.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/create-people/create-people.component.ts","./src/app/create-people/create-people.component.html","./src/app/redis/redis.service.ts","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/auth/token-storage.service.ts","./src/app/search-people/search-people.component.ts","./src/app/search-people/search-people.component.html","./src/app/auth/auth-interceptor.ts","./src/app/auth/signup-info.ts","./src/app/auth/login-info.ts","./src/app/_services/marker.service.ts","./src/app/auth/auth.service.ts","./src/app/_services/pop-up.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Apollo} from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nconst GET_CIUDADES = gql`\n  {\n    ciudades {\n      id\n      ciudad\n      pais\n      codigoPostal\n      numeroAccidentes\n    }\n  }\n`;\n\nconst CREATE_CIUDAD = gql`\n  mutation($ciudad: String!, $codigoPostal: String!, $numeroAccidentes: String!, $pais: String! ){\n    createLink (ciudad: $ciudad, codigoPostal: $codigoPostal, numeroAccidentes: $numeroAccidentes, pais: $pais){\n      id,\n      ciudad,\n      codigoPostal,\n      numeroAccidentes,\n      pais\n    }\n  }\n`;\n\ntype Ciudad = {\n  id?: number;\n  ciudad?: string;\n  codigoPostal?: String;\n  numeroAccidentes?: String;\n  pais?: String;\n}\n\n@Component({\n  selector: 'app-ciudades',\n  templateUrl: './ciudades.component.html',\n  styleUrls: ['./ciudades.component.scss']\n})\nexport class CiudadesComponent implements OnInit {\n  ciudades: any[];\n  loading = true;\n  error: any;\n  createdCiudad: Ciudad;\n  ciudad: string = '';\n  codigoPostal: string = '';\n  numeroAccidentes: string = '';\n  pais: string = '';\n  pageActual: number = 1;\n\n  constructor(private apollo: Apollo) { }\n\n  ngOnInit() {\n    this.apollo\n      .watchQuery({\n        query: GET_CIUDADES\n      }).valueChanges.subscribe( (result:any) => {\n        this.ciudades = result.data && result.data.ciudades;\n        this.loading = result.loading;\n        this.error = result.error;\n      });\n  }\n\n  createCiudad(){\n\t\tthis.apollo.mutate({\n\t\t  mutation: CREATE_CIUDAD,\n\t\t  variables: {ciudad: this.ciudad, codigoPostal: this.codigoPostal, numeroAccidentes: this.numeroAccidentes, pais: this.pais}\n\t\t}).subscribe(result => {\n\t\t  this.createdCiudad = result.data['createLink'];\n      console.log('New Ciudad: ' + this.createdCiudad.id + ' -> ' + this.createdCiudad.ciudad \n      + ' -> ' + this.createdCiudad.codigoPostal + ' -> ' + this.createdCiudad.numeroAccidentes\n      + ' -> ' + this.createdCiudad.pais);\n\t\t})\n\t}\n}","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h3>Ciudades</h3>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Ciudad</th>\n          <th scope=\"col\">Pais</th>\n          <th scope=\"col\">Codigo postal</th>\n          <th scope=\"col\">No. de accidentes</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"ciudades\">\n        <tr *ngFor=\"let ciudad of ciudades | keyvalue | paginate: {itemsPerPage: 5, currentPage: pageActual}\">\n          <th scope=\"row\">{{ ciudad.value.id }}</th>\n          <th scope=\"row\">{{ ciudad.value.ciudad }}</th>\n          <th scope=\"row\">{{ ciudad.value.pais }}</th>\n          <th scope=\"row\">{{ ciudad.value.codigoPostal }}</th>\n          <th scope=\"row\">{{ ciudad.value.numeroAccidentes }}</th>\n        </tr>\n      </tbody>\n    </table>\n    <pagination-controls (pageChange)=\"pageActual = $event\"></pagination-controls>\n  </div>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h3>Agregar ciudades</h3>\n  </div>\n  <div class=\"panel-body\">\n    <div class=\"col-md-5\">\n      <label class=\"col-sm-2 col-form-label col-form-label-sm\">City</label>\n      <input class=\"form-control\" [(ngModel)]=\"ciudad\" type='text' placeholder='Nombre de la ciudad' />\n    </div>\n    <div class=\"col-md-5\">\n      <label class=\"col-sm-2 col-form-label col-form-label-sm\">Zip</label>\n      <input class=\"form-control\" [(ngModel)]=\"codigoPostal\" type='text' placeholder='Codigo postal de la Ciudad' />\n    </div>\n    <div class=\"col-md-5\">\n      <label class=\"col-sm-6 col-form-label col-form-label-sm\">No Accidents</label>\n      <input class=\"form-control\" [(ngModel)]=\"numeroAccidentes\" type='text' placeholder='Numero de Accidentes' />\n    </div>\n    <div class=\"col-md-5\">\n      <label class=\"col-sm-2 col-form-label col-form-label-sm\">Country</label>\n      <input class=\"form-control\" [(ngModel)]=\"pais\" type='text' placeholder='Nombre del Pais' />\n    </div>\n    <div class=\"col-sm-2\">\n      <button (click)=\"createCiudad()\" type=\"submit\" class=\"btn btn-primary\">\n        Guardar\n      </button>\n    </div>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { SignUpInfo } from '../auth/signup-info';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})\nexport class RegistroComponent implements OnInit {\n\n  form: any = {};\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = false;\n  role: string[] = [];\n  signupInfo: SignUpInfo;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() { }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.signupInfo = new SignUpInfo(\n      this.form.name,\n      this.form.username,\n      this.form.email,\n      this.form.password\n    );\n    this.signupInfo.role = ['user'];\n    this.authService.signUp(this.signupInfo).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<html>\n\n<head>\n    <meta charset=\"utf-8\">\n\n</head>\n\n<body class=\"background-img\">\n    <div *ngIf=\"isSignedUp; else signupForm\">\n        Tu registro fue exitoso. Por favor Iniciar sesión!\n    </div>\n\n    <ng-template #signupForm>\n        <div class=\"login-box row col-sm-6\" style=\"max-width:350px;\">\n            <h1 class=\"text-center text-white\">Registrate</h1><br>\n            <div *ngIf=\"f.submitted && isSignUpFailed\" class=\"alert alert-warning\">\n                Signup<br />{{errorMessage}}\n            </div>\n            <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n                <div class=\"form-group\">\n                    <label for=\"name\">Tu nombre</label>\n                    <input id=\"name\" type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"form.name\"\n                        #name=\"ngModel\" required />\n                    <div *ngIf=\"f.submitted && name.invalid\">\n                        <div *ngIf=\"name.errors.required\">Se requiere el nombre</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"username\">Nombre de usuario</label>\n                    <input id=\"username\" type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\"\n                        #username=\"ngModel\" required />\n                    <div *ngIf=\"f.submitted && username.invalid\">\n                        <div *ngIf=\"username.errors.required\">Se requiere nombre de usuario</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Correo electrónico</label>\n                    <input id=\"email\" type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\"\n                        #email=\"ngModel\" required email />\n                    <div *ngIf=\"f.submitted && email.invalid\">\n                        <div *ngIf=\"email.errors.required\">Correo electronico es requerido</div>\n                        <div *ngIf=\"email.errors.email\">Dirección de correo electrónico inválida</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Contraseña</label>\n                    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\"\n                        [(ngModel)]=\"form.password\" #password=\"ngModel\" required minlength=\"6\" />\n                    <div *ngIf=\"f.submitted && password.invalid\">\n                        <div *ngIf=\"password.errors.required\">Se requiere contraseña</div>\n                        <div *ngIf=\"password.errors.minlength\">La contraseña debe tener al menos 6 caracteres</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-primary\">Registrarse</button>\n                </div>\n            </form>\n        </div>\n    </ng-template>\n\n</body>\n\n</html>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShapeService {\n\n  constructor(private http: HttpClient) { }\n\n  getStateShapes(): Observable<any> {\n    return this.http.get('/assets/data/usa-states.geojson');\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'http://104.154.247.177:5046/graphql/'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenStorageService } from '../auth/token-storage.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  info: any;\n\n  constructor(private ruta: Router, private token: TokenStorageService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.token.getToken(),\n      username: this.token.getUsername(),\n      authorities: this.token.getAuthorities(),\n    };\n  }\n\n  logout() {\n    this.token.signOut();\n    this.ruta.navigate(['']);\n    window.location.reload();\n  }\n}\n","<div calss=\"container-fluid\" *ngIf=\"info.token; else loggedOut\">\n  <button class=\"col-md-offset-11 btn btn-secondary\" (click)=\"logout()\">Cerrar sesión</button>\n  <div class=\"profile-img\"></div>\n  <span class=\"label label-info\">Tu información</span>\n  <p>\n    <strong>Nombre de usuario:</strong> {{info.username}}<br />\n    <strong>Roles:</strong> {{info.authorities}}<br />\n    <strong>Token:</strong> {{info.token}}.\n  </p>\n  <br/>\n</div>\n<ng-template #loggedOut >\n  <div class=\"background-img\" align=\"center\">\n    <font size=10>Mapa de accidentes en USA.</font><br><br>\n    <font size=5>Informacion acerca de accidentes ocurridos en Estados Unidos</font><br>\n    <font size=5>Cuidate y no formes parte de las estadisticas.</font><br><br><br>\n    <font size=5 >Por favor Iniciar sesión</font>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RedisService } from '../redis/redis.service';\nimport { PersonI } from '../model/person/person';\n\n@Component({\n  selector: 'app-people-list',\n  templateUrl: './people-list.component.html',\n  styleUrls: ['./people-list.component.scss']\n})\nexport class PeopleListComponent implements OnInit {\n  people: PersonI[];\n  pageActual: number = 1;\n  constructor(private redisService: RedisService) { }\n\n  ngOnInit() {\n    this.redisService.getAll().subscribe((data) => {\n      this.people = data;\n      console.log(this.people)\n    },\n    err => {\n      console.log(err);\n    });\n  }\n  \n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3>Personas desaparecidas</h3>\n    </div>\n    <div class=\"panel-body\">\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Nombre(s)</th>\n                    <th>Apellidos</th>\n                    <th>Edad</th>\n                    <th>Descripcion</th>\n                    <th>Ciudad</th>\n                    <th>Pais</th>\n                    <th>Direccion</th>\n                    <th>Condicion climatica (Dia de desaparicion)</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let person of people | keyvalue | paginate: {itemsPerPage: 7, currentPage: pageActual}\">\n                    <td>{{person.value.id}}</td>\n                    <td>{{person.value.firstName}}</td>\n                    <td>{{person.value.lastName}}</td>\n                    <td>{{person.value.age}}</td>\n                    <td>{{person.value.description}}</td>\n                    <td>{{person.value.city}}</td>\n                    <td>{{person.value.country}}</td>\n                    <td>{{person.value.street}}</td>\n                    <td>{{person.value.weather_condition}}</td>\n                </tr>\n            </tbody>\n        </table>\n        <pagination-controls (pageChange)=\"pageActual = $event\"></pagination-controls>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class PersonI {\n    id: number;\n    firstName: string;\n    lastName: string;\n    age: number;\n    description: string;\n    city: string;\n    country: string;\n    street: string;\n    weather_condition: string;\n\n    public void (id: number){\n        this.id=id;\n    }\n    public number (){\n        return this.id;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './auth/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app-web';\n  roles: string[];\n  authority: string;\n  \n  constructor(public tokenStorage: TokenStorageService) { }\n \n  ngOnInit() {\n    if (this.tokenStorage.isUserLoggedIn()) {\n      this.roles = this.tokenStorage.getAuthorities();\n      this.roles.every(role => {\n        if (role === 'ROLE_ADMIN') {\n          this.authority = 'admin';\n        } else if (role === 'ROLE_PM') {\n          this.authority = 'pm';\n        }\n        this.authority = 'user';\n      });\n    }\n  }\n}\n","<nav class=\"navbar navbar-inverse \">\n  <div class=\"container-fluid\">\n    <ul class=\"nav navbar-nav pull-right\" routerLinkActive=\"active\">\n      <li *ngIf=\"!tokenStorage.isUserLoggedIn()\"><a routerLink=\"user/login\">Login</a></li>\n      <li *ngIf=\"!tokenStorage.isUserLoggedIn()\"><a routerLink=\"user/registro\">Sigup</a></li>\n    </ul>\n    <ul class=\"nav navbar-nav \" routerLinkActive=\"active\">\n      <li *ngIf=\"!tokenStorage.isUserLoggedIn()\"><a class=\"navbar-brand\">App Web</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"\">Home</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"mapa\">Mapa</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"people/list-people\">Personas</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"people/add\">Añadir persona</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"people/findbyid\">Buscar</a></li>\n      <li *ngIf=\"tokenStorage.isUserLoggedIn()\"><a routerLink=\"ciudades\">Ciudades</a></li>\n    </ul>\n  </div>\n</nav>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RedisService } from '../redis/redis.service';\nimport { PersonI } from '../model/person/person';\n\n@Component({\n  selector: 'app-create-people',\n  templateUrl: './create-people.component.html',\n  styleUrls: ['./create-people.component.scss']\n})\nexport class CreatePeopleComponent implements OnInit {\n\n  person: PersonI = new PersonI()\n  submitted = false;\n\n  constructor(private redisService: RedisService) { }\n\n  ngOnInit(): void {\n  }\n\n  save() {\n    this.redisService.create(this.person)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.person = new PersonI();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3>Agregar personas</h3>\n    </div>\n    <div class=\"panel-body\">\n        <form (ngSubmit)=\"onSubmit()\">\n            <div class=\"col-md-1\">\n                <label for=\"id\">Id</label>\n                <input type=\"number\" class=\"form-control\" id=\"id\" required [(ngModel)]=\"person.id\" name=\"id\">\n            </div>\n    \n            <div class=\"col-md-5\">\n                <label for=\"firstName\">First Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"person.firstName\"\n                    name=\"firstName\">\n            </div>\n    \n            <div class=\"col-md-5\">\n                <label for=\"lastName\">Last Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"person.lastName\"\n                    name=\"lastName\">\n            </div>\n    \n            <div class=\"col-md-1\">\n                <label for=\"age\">Age</label>\n                <input type=\"number\" class=\"form-control\" id=\"age\" required [(ngModel)]=\"person.age\" name=\"age\">\n            </div>\n    \n            <div class=\"col-md-12\">\n                <label for=\"description\">Description</label>\n                <input type=\"text\" class=\"form-control\" id=\"description\" required [(ngModel)]=\"person.description\"\n                    name=\"description\">\n            </div>\n            <div class=\"col-md-6\">\n                <label for=\"city\">City</label>\n                <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"person.city\" name=\"city\">\n            </div>\n    \n            <div class=\"col-md-6\">\n                <label for=\"country\">Country</label>\n                <input type=\"text\" class=\"form-control\" id=\"country\" required [(ngModel)]=\"person.country\" name=\"country\">\n            </div>\n    \n            <div class=\"col-md-12\">\n                <label for=\"street\">Street</label>\n                <input type=\"text\" class=\"form-control\" id=\"street\" required [(ngModel)]=\"person.street\" name=\"street\">\n            </div>\n    \n            <div class=\"col-md-12\">\n                <label for=\"weather_condition\">Weather Condition</label>\n                <input type=\"text\" class=\"form-control\" id=\"weather_condition\" required\n                    [(ngModel)]=\"person.weather_condition\" name=\"weather_condition\">\n            </div>\n            <p>.</p>\n            <div class=\"col-md-12\">\n                <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\n            </div>\n        </form>\n    </div>\n    \n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PersonI } from '../model/person/person';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RedisService {\n  \n  private baseUrl = 'http://104.154.247.177:5045/rest/person';\n\n  constructor(private http: HttpClient) { }\n \n  public create(person: PersonI): Observable<PersonI> {\n    return this.http.post<PersonI>(`${this.baseUrl}/add`, person);\n  }\n \n  public update(person: PersonI): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/update`, person);\n  }\n \n  public delete(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n \n  public getAll(): Observable<PersonI[]>{\n    return this.http.get<PersonI[]>(`${this.baseUrl}/all`, httpOptions);\n  }\n\n  public getById(id: number): Observable<PersonI> {\n    return this.http.get<PersonI>(`${this.baseUrl}/${id}`, httpOptions);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistroComponent } from './registro/registro.component';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule} from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { httpInterceptorProviders } from './auth/auth-interceptor';\nimport { CreatePeopleComponent } from './create-people/create-people.component';\nimport { PeopleListComponent } from './people-list/people-list.component';\nimport { SearchPeopleComponent } from './search-people/search-people.component';\nimport { RedisService } from './redis/redis.service';\nimport { CiudadesComponent } from './ciudades/ciudades.component';\nimport { GraphQLModule } from './graphql.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistroComponent,\n    LoginComponent,\n    HomeComponent,\n    CreatePeopleComponent,\n    PeopleListComponent,\n    SearchPeopleComponent,\n    CiudadesComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    GraphQLModule,\n    NgxPaginationModule\n  ],\n  providers: [httpInterceptorProviders, RedisService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterViewInit, Component } from '@angular/core';\nimport * as L from 'leaflet';\nimport { icon, Marker } from 'leaflet';\nimport { MarkerService } from '../_services/marker.service';\nimport { ShapeService } from '../_services/shape.service';\n\n\nconst iconRetinaUrl = 'assets/marker-icon-2x.png';\nconst iconUrl = 'assets/marker-icon.png';\nconst shadowUrl = 'assets/marker-shadow.png';\nconst iconDefault = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = iconDefault;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements AfterViewInit {\n\n  private states;\n  private map;\n\n  constructor(\n    private shapeService: ShapeService,\n    private markerService: MarkerService)\n    { }\n\n  ngAfterViewInit(): void {\n    this.initMap();\n     //this.markerService.makeCapitalMarkers(this.map);\n    this.shapeService.getStateShapes().subscribe(states => {\n      this.states = states;\n      this.initStatesLayer();\n      this.markerService.makeCapitalCircleMarkers(this.map);\n    });\n  }\n\n  private initStatesLayer() {\n    const stateLayer = L.geoJSON(this.states, {\n      style: (feature) => ({\n        weight: 3,\n        opacity: 0.5,\n        color: '#008f68',\n        fillOpacity: 0.8,\n        fillColor: '#6DB65B'\n      }),\n      onEachFeature: (feature, layer) => (\n  layer.on({\n    mouseover: (e) => (this.highlightFeature(e)),\n    mouseout: (e) => (this.resetFeature(e)),\n  })\n)\n    });\n\n    this.map.addLayer(stateLayer);\n  }\n\n  private highlightFeature(e)  {\n    const layer = e.target;\n    layer.setStyle({\n      weight: 1,\n      opacity: 1.0,\n      color: '#DFA612',\n      fillOpacity: 1.0,\n      fillColor: '#00FF00',\n    });\n  }\n\n  private resetFeature(e)  {\n    const layer = e.target;\n    layer.setStyle({\n      weight: 1,\n      opacity: 0.5,\n      color: '#008f68',\n      fillOpacity: 0.8,\n      fillColor: '#6DB65B'\n    });\n  }\n\n\n  private initMap(): void {\n    this.map = L.map('map', {\n      center: [39.8282, -98.5795],\n      zoom: 4\n    });\n\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '© <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n\n    tiles.addTo(this.map);\n  }\n\n }\n","<div class=\"panel panel-success\">\n    <div class=\"panel-body\">\n        <div class=\"map-container\">\n            <div class=\"map-frame\">\n                <div id=\"map\"></div>\n            </div>\n        </div>\n    </div>\n    \n</div>\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\n//const ID_KEY = 'AuthAuthorities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  private roles: Array<string> = [];\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n \n  public getAuthorities(): string[] {\n    this.roles = [];\n \n    if (sessionStorage.getItem(TOKEN_KEY)) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        this.roles.push(authority.authority);\n      });\n    }\n \n    return this.roles;\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(TOKEN_KEY)\n    return !(user === null)\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { RedisService } from '../redis/redis.service';\nimport { PersonI } from '../model/person/person';\n\n@Component({\n  selector: 'app-search-people',\n  templateUrl: './search-people.component.html',\n  styleUrls: ['./search-people.component.scss']\n})\nexport class SearchPeopleComponent implements OnInit {\n\n  id: any;\n  person: PersonI;\n  constructor(private redisService: RedisService) { }\n\n  ngOnInit() {\n    this.id = 0;\n  }\n\n  private searchPerson() {\n    this.redisService.getById(this.id)\n      .subscribe((person: PersonI) => (this.person = person, console.log(person)));\n  }\n\n  onSubmit() {\n    this.searchPerson();\n  }\n\n  deletePerson(): void {\n    this.redisService.delete(this.id)\n      .subscribe(\n        response => {\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n        <h3>Search</h3>\n    </div>\n    <form (ngSubmit)=\"onSubmit()\" style=\"width: 300px;\">\n        <div class=\"form-group panel-body\">\n            <input type=\"number\" class=\"form-control\" placeholder=\"Search by id\" id=\"id\" required [(ngModel)]=\"id\"\n                name=\"id\">\n            <p></p>\n            <div class=\"col-md-4\">\n                <button type=\"submit\" class=\"btn btn-success\">Search</button>\n            </div>\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-danger\" (click)=\"deletePerson()\">Delete</button>\n            </div>\n        </div>\n    </form>\n</div>\n<p></p>\n<div *ngIf=\"person\" class=\"panel panel-success\">\n    <div class=\"panel-body\">\n        <h5 class=\"badge badge-info\">More Details</h5>\n        <div>\n            <label>ID: </label> {{person.id}}\n        </div>\n        <div>\n            <label>First Name: </label> {{person.firstName}}\n        </div>\n        <div>\n            <label>Last Name: </label> {{person.lastName}}\n        </div>\n        <div>\n            <label>Age: </label> {{person.age}}\n        </div>\n        <div>\n            <label>Description: </label> {{person.description}}\n        </div>\n        <div>\n            <label>City: </label> {{person.city}}\n        </div>\n        <div>\n            <label>Country: </label> {{person.country}}\n        </div>\n        <div>\n            <label>Street: </label> {{person.street}}\n        </div>\n        <div>\n            <label>Weather Condition: </label> {{person.weather_condition}}\n        </div>\n    </div>\n</div>","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent  } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private token: TokenStorageService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        let authReq = req;\n        const token = this.token.getToken();\n        if (token != null) {\n            authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n        }\n        return next.handle(authReq);\n    }\n}\n\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];","export class SignUpInfo {\n    name: string;\n    username: string;\n    email: string;\n    password: string;\n    role: string[];\n    constructor(name: string, username: string, email: string, password: string) {\n        this.name = name;\n        this.username = username;\n        this.email = email;\n        this.password = password;\n        this.role= ['user'];\n    }\n}","export class AuthLoginInfo {\n    username: string;\n    password: string;\n \n    constructor(username: string, password: string) {\n        this.username = username;\n        this.password = password;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PopUpService } from '../_services/pop-up.service';\nimport * as L from 'leaflet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkerService {\n\n  capitals: string = '/assets/data/accidentes.geojson';\n\n  static ScaledRadius(val: number, maxVal: number): number {\n    return 20 * (val / maxVal);\n  }\n\n  constructor(private http: HttpClient,\n    private popupService: PopUpService) {}\n\n  makeCapitalMarkers(map: L.map): void {\n    this.http.get(this.capitals).subscribe((res: any) => {\n      for (const c of res.features) {\n        const lat = c.geometry.coordinates[0];\n        const lon = c.geometry.coordinates[1];\n        const marker = L.marker([lon, lat]).addTo(map);\n      }\n    });\n  }\n  makeCapitalCircleMarkers(map: L.map): void {\n    this.http.get(this.capitals).subscribe((res: any) => {\n      const maxVal = Math.max(...res.features.map(x => x.properties.tmc), 0);\n\n      for (const c of res.features) {\n        const lat = c.geometry.coordinates[0];\n        const lon = c.geometry.coordinates[1];\n        const circle = L.circleMarker([lon, lat],{\n          radius: MarkerService.ScaledRadius(c.properties.tmc, maxVal)\n       }) //.addTo(map);\n\n       circle.bindPopup(this.popupService.makeCapitalPopup(c.properties));\n\n        circle.addTo(map);\n\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JwtResponse } from './jwt-response';\nimport { AuthLoginInfo } from './login-info';\nimport { SignUpInfo } from './signup-info';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://34.68.87.191:5044/api/auth/signin';\n  private signupUrl = 'http://34.68.87.191:5044/api/auth/signup';\n\n  constructor(private http: HttpClient) { }\n\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignUpInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopUpService {\n\n  constructor() { }\n\n  makeCapitalPopup(data: any): string {\n    return `` +\n      `<div>Id: ${ data.id }</div>` +\n      `<div>State: ${ data.state }</div>` +\n      `<div>City: ${ data.city}</div>` +\n      `<div>Severiry: ${data.severity}</div>` +\n      `<div>Start Time: ${data.startTime}</div>` +\n      `<div>End Time: ${data.endTime}</div>` +\n      `<div>TMC: ${data.tmc}</div>` +\n      `<div>Source: ${data.source}</div>` +\n      `<div>Description: ${data.description}</div>` +\n      `<div>Street: ${data.street}</div>`\n\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { MapComponent } from './map/map.component';\nimport { RegistroComponent } from './registro/registro.component';\nimport { HomeComponent } from './home/home.component';\nimport { CiudadesComponent } from './ciudades/ciudades.component';\nimport { CreatePeopleComponent } from './create-people/create-people.component';\nimport { PeopleListComponent } from './people-list/people-list.component';\nimport { SearchPeopleComponent } from './search-people/search-people.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: 'user/registro', component: RegistroComponent },\n  { path: 'mapa', component: MapComponent },\n  { path: 'people/list-people', component: PeopleListComponent },\n  { path: 'people/add', component: CreatePeopleComponent },\n  { path: 'people/findbyid', component: SearchPeopleComponent },\n  { path: 'ciudades', component: CiudadesComponent },\n  { path: '', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { AuthLoginInfo } from '../auth/login-info';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  user: string;\n  private loginInfo: AuthLoginInfo;\n\n  constructor(private ruta: Router,private authService: AuthService, private tokenStorage: TokenStorageService) { }\n \n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n      this.user = this.tokenStorage.getUsername();\n    }\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.loginInfo = new AuthLoginInfo(\n      this.form.username,\n      this.form.password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUsername(data.username);\n        this.tokenStorage.saveAuthorities(data.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n        this.onLoginRedirect();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n  onLoginRedirect(): void {\n    this.ruta.navigate(['']);\n  }\n}\n","<html >\n\n<head>\n  <meta charset=\"utf-8\">\n\n</head>\n\n<body class=\"background-img\">\n  <div class=\"badge badge-info\" *ngIf=\"isLoggedIn; else loggedOut\">\n    Bienvenido a<br/>\n    Iniciado Sesión como <br/>\n    {{user}}\n  </div>\n\n  <ng-template #loggedOut>\n    <div class=\"login-box row col-sm-6\" style=\"max-width:350px;\">\n      <h1 class=\"text-center text-white\">Iniciar Sesión</h1><br>\n      <div *ngIf=\"f.submitted && isLoginFailed\" class=\"alert alert-danger\">\n        Error {{errorMessage}}\n      </div>\n      <form name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\n        <div class=\"form-group\">\n          <label for=\"username\">Nombre de Usuario</label>\n          <input id=\"username\" type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\"\n            required /> \n          <div *ngIf=\"f.submitted && username.invalid\">\n            <div *ngIf=\"username.errors.required\">Se requiere nombre de usuario</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Contraseña</label>\n          <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\"\n            required minlength=\"6\" />\n          <div *ngIf=\"f.submitted && password.invalid\">\n            <div *ngIf=\"password.errors.required\">Se requiere contraseña</div>\n            <div *ngIf=\"password.errors.minlength\">La contraseña debe tener al menos 6 caracteres</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\">Iniciar sesión</button>\n        </div>\n      </form>\n      <hr />\n      <p>¿No tienes una cuenta?</p>\n      <a href=\"registro\" style=\"color: aliceblue;\" class=\"btn btn-success\">Regístrate</a>\n    </div>\n  </ng-template>\n\n</body>\n\n</html>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}